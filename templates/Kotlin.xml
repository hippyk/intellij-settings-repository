<templateSet group="Kotlin">
  <template name="confirm" value="AlertDialog.Builder(this)&#10;    .setTitle(&quot;确认&quot;).setMessage(&quot;$string$&quot;)&#10;    .setPositiveButton(&quot;确定&quot;, {_, _ -&gt; &#10;        &#10;    })&#10;    .setNegativeButton(&quot;取消&quot;, null)&#10;    .show()" description="dialog" toReformat="false" toShortenFQNames="true">
    <variable name="string" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="alert" value="AlertDialog.Builder(this).setTitle(&quot;提示&quot;)&#10;                    .setMessage(&quot;$string$&quot;).setPositiveButton(&quot;确定&quot;, null).show()" description="" toReformat="false" toShortenFQNames="true">
    <variable name="string" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="async" value="object : AsyncTask&lt;Int, Void, Any&gt;() {&#10;                override fun onPreExecute() {&#10;                    super.onPreExecute()&#10;                    LoadingDialog.show(this@)&#10;                }&#10;        &#10;                override fun doInBackground(params: Array&lt;Int&gt;?): Any? {&#10;                    if (params == null || params.size == 0) {&#10;                        return null&#10;                    }&#10;                    try {&#10;                        return ServiceFactory.getDrugAdmService(context).getxxx(params[0])&#10;                    } catch (e: OtsBizException) {&#10;                        alertErrHandler.handleError(e.message)&#10;                        return null&#10;                    }&#10;            &#10;                }&#10;        &#10;                override fun onPostExecute(result: Any?) {&#10;                    LoadingDialog.dismiss()&#10;                    if (result != null) {&#10;                &#10;                    }&#10;                }&#10;            }.execute()" description="async task" toReformat="false" toShortenFQNames="true" />
  <template name="tod" value="//TOD " description="todo" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="sout" value="println(&quot;lyn-------------- &quot; + $END$)" description="Prints a string to System.out" toReformat="true" toShortenFQNames="false">
    <context />
  </template>
  <template name="ld" value="Log.d(TAG, &quot;$name$:&quot; + $value$)" description="log.debug" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="li" value="Log.i(TAG, &quot;$name$:&quot; + $value$)" description="log.i" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="stact" value="val starter = Intent(this, $ACTIVITY$::class.java)&#10;startActivity(starter)" toReformat="false" toShortenFQNames="true">
    <variable name="ACTIVITY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>